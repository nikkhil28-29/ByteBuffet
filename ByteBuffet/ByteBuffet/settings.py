"""
Django settings for ByteBuffet project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import dj_database_url 
from pathlib import Path

import os

# Set the GDAL library path environment variable
os.environ['GDAL_LIBRARY_PATH'] = '/path/to/gdal/library'

# from decouple import config, Config, Csv
# config.read_env()
# from verify_email.apps import VerifyEmailConfig

import os
from dotenv import load_dotenv
from django.core.exceptions import ImproperlyConfigured

# Load environment variables from .env file
load_dotenv()

# SECRET_KEY = os.environ.get("SECRET_KEY")
SECRET_KEY = "8d^$9$t6e*woiac1763h#0w^p%kwd-67)_bm7wibs$&v^^_8k&"

if not SECRET_KEY:
    raise ImproperlyConfigured("The SECRET_KEY setting must not be empty.")

                          
import os
from django.contrib.messages import constants as messages


MESSAGE_TAGS = {
        messages.DEBUG: 'alert-secondary',
        messages.INFO: 'alert-info',
        messages.SUCCESS: 'alert-success',
        messages.WARNING: 'alert-warning',
        messages.ERROR: 'alert-danger',
 }
# from .models import MyUser
# import os

# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# STATIC_URL = '/static/'
# # Use os.path.join to create an absolute path for STATIC_ROOT
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'ByteBuffet/static'),
# ]

# to store sensivetve info from this file 
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/


# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = config('DEBUG', default=False, cast=bool) # from pypi python decouple

ALLOWED_HOSTS = ['localhost', '127.0.0.1', '.vercel.app']
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'accounts',
    'vendor',
    'menu',
    'marketplace',
    "verify_email",
    "customers",
    # "rest_framework",
    "django.contrib.gis",
    "orders",
    # "rest_framework_simplejwt"
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",

]

ROOT_URLCONF = 'ByteBuffet.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                #data will be shred from cover.html to,dashbard,profile and alllllll
                'accounts.context_processors.get_vendor',
                'accounts.context_processors.get_user_profile',
                'marketplace.context_processors.cart_counter',
                'marketplace.context_processors.get_cart_amounts',
                'marketplace.context_processors.get_map_api',
                'marketplace.context_processors.get_paypal_client_id',
            ],
        },
    },
]

WSGI_APPLICATION = 'ByteBuffet.wsgi.application'

# settings.py

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Default backend
]


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases



# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/


# STATICFILES_DIRS = [os.path.join(BASE_DIR, 'ByteBuffet/static')]
STATIC_URL = '/static/'
STATIC_ROOT =BASE_DIR /'static'
STATICFILES_DIRS=[
    'ByteBuffet/static'
]
#media  file ,  photo,profile will be uploaded to media folder not sttsic
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR /'media'


# DATABASES = {
#     'default': {
#         # 'ENGINE': 'django.db.backends.postgresql',
#         'ENGINE': 'django.contrib.gis.db.backends.postgis',
#         'PORT': '5432',
#         'NAME': 'postgres',
#         'USER': 'postgres',
#         'PASSWORD': 'nikhil28282828',
#         'HOST': 'localhost',
#     }
# }
DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.postgresql',
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'PORT': '5432',
        'NAME': os.environ.get('DB_NAME'),
        'USER': os.environ.get('DB_USER'),
        'PASSWORD': os.environ.get('DB_PASSWORD'),
        'HOST': os.environ.get('DB_HOST'),
    }
}


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         # 'ENGINE': 'django.contrib.gis.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'my_database.db',
#     }
# }


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field
DEBUG=True
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = "accounts.MyUser"
EMAIL_FIELD = 'email'



# # Email configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' #actiavteion link will be geneerated in termianl


# DEBUG = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True
EMAIL_PORT = 465

# EMAIL_HOST_USER = 'bytebuffet00@gmail.com'
# EMAIL_HOST_PASSWORD = 'ptpj cjwq xadu xayn'
# DEFAULT_FROM_EMAIL = 'bytebuffet00@gmail.com'
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = os.environ.get('DEFAULT_FROM_EMAIL')

GOOGLE_API_KEY= os.environ.get('GOOGLE_API_KEY')

PAYPAL_CLIENT_ID= os.environ.get('PAYPAL_CLIENT_ID')

SECURE_CROSS_ORIGIN_OPENER_POLICY = 'same-origin-allow-popups'



# # STATICFILES_DIRS = [os.path.join(BASE_DIR, 'ByteBuffet/static')]
# STATIC_URL = '/static/'
# STATIC_ROOT =BASE_DIR /'static'
# STATICFILES_DIRS=[
#     'ByteBuffet/static'
# ]
# #media  file ,  photo,profile will be uploaded to media folder not sttsic
# MEDIA_URL = '/media/'
# MEDIA_ROOT = BASE_DIR /'media'


# # STORAGES = {
# #     # ...
# #     "staticfiles": {
# #         "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
# #     },
# # }

